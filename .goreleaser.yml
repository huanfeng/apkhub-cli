version: 2

# 在构建前执行的命令
before:
  hooks:
    - go mod tidy

# 构建配置
builds:
  - id: apkhub
    main: .
    binary: apkhub
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    # 自动注入版本信息
    ldflags:
      - -s -w
      - -X github.com/huanfeng/apkhub-cli/internal/version.Version={{.Version}}
      - -X github.com/huanfeng/apkhub-cli/internal/version.Commit={{.Commit}}
      - -X github.com/huanfeng/apkhub-cli/internal/version.BuildDate={{.Date}}

# 打包配置
archives:
  - id: default
    # 文件名格式：apkhub-v1.0.0-linux-amd64.tar.gz
    name_template: >-
      {{ .ProjectName }}-
      {{- .Version }}-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # 默认使用 tar.gz
    formats: ['tar.gz']
    # Windows 平台使用 zip
    format_overrides:
      - goos: windows
        formats: ['zip']

# 生成校验和文件
checksum:
  name_template: 'SHA256SUMS.txt'

# GitHub Release 配置
release:
  # Release 标题
  name_template: "ApkHub CLI {{.Version}}"
  # 不创建草稿
  draft: false
  # 自动生成 release notes
  mode: append
  replace_existing_artifacts: true
  header: |
    ## ApkHub CLI {{.Version}}

    ### Installation

    #### Linux/macOS
    ```bash
    # Download the appropriate archive for your system
    curl -L https://github.com/huanfeng/apkhub-cli/releases/download/{{.Tag}}/{{ .ProjectName }}-{{.Version}}-linux-x86_64.tar.gz -o apkhub.tar.gz

    # Extract
    tar xzf apkhub.tar.gz

    # Move to PATH
    sudo mv apkhub /usr/local/bin/

    # Make executable
    sudo chmod +x /usr/local/bin/apkhub
    ```

    #### Windows
    Download the Windows archive and extract `apkhub.exe` to a directory in your PATH.

# 自动生成的 changelog
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
  groups:
    - title: 'Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999

# Homebrew Formula
# 注意：需要先创建 homebrew-tap 仓库并设置 HOMEBREW_TAP_GITHUB_TOKEN
brews:
  - name: apkhub
    # GitHub repository to push the formula to
    repository:
      owner: apkhub
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # 如果没有设置 token，跳过此步骤
    skip_upload: "{{ not .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # Formula description
    description: "A command-line tool for managing distributed APK repositories"
    homepage: "https://github.com/huanfeng/apkhub-cli"
    license: "MIT"

    # Dependencies
    dependencies:
      - name: aapt

    # Installation
    install: |
      bin.install "apkhub"

    # Test
    test: |
      system "#{bin}/apkhub", "version"

scoops:
  - name: apkhub
    directory: "bucket"
    commit_msg_template: "Update ApkHub CLI scoop manifest to {{ .Tag }}"
    homepage: "https://github.com/huanfeng/apkhub-cli"
    description: "ApkHub CLI – manage distributed APK repositories"
    license: MIT
    skip_upload: false
    repository:
      owner: huanfeng
      name: scoop-bucket
      branch: main
      token: "{{ .Env.SCOOP_BUCKET_GITHUB_TOKEN }}"

    # 可选：PR 而不是直接 push
      # pull_request:
      #   enabled: true
      #   draft: false
      #   body: |
      #     Update Scoop manifest for ApkHub CLI {{ .Tag }}

    # 可选作者信息
    commit_author:
      name: goreleaserbot
      email: goreleaser@bot.com